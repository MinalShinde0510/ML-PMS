@using PagedList;
@using PagedList.Mvc;
@model PagedList.IPagedList<CloudTrixApp.Models.RoleManagement>

@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="content-wrapper">
    <section class="content-header">
        <h1>
            <small></small>
        </h1>
        <ol class="breadcrumb">
            <li><a href="#"><i class="fa fa-dashboard"></i> Role Management</a></li>
            <li class="active">Role Management List</li>
        </ol>
    </section>
    <section class="content">
        <div class="row">
            <div class="col col-sm-11">
                <div class="panel panel-primary">
                    <div class="panel-heading">
                        <h3 class="panel-title">Role Management List</h3>
                    </div>
                    <div class="panel-body">
                        @using (Html.BeginForm("Index", "RoleManagement", FormMethod.Get))
                        { <br />
                            <div class="table-responsive">
                                <table class="table">
                                    <tr>
                                        <td align="left">&nbsp;</td>
                                        <td>&nbsp;</td>
                                        <td align="center">
                                            @Html.DropDownList("SearchField", (IEnumerable<SelectListItem>)ViewData["SearchFields"], new { style = "width:150px;height:33px" })
                                            @Html.DropDownList("SearchCondition", (IEnumerable<SelectListItem>)ViewData["SearchConditions"], new { style = "width:150px;height:33px" })
                                            @Html.TextBox("SearchText", ViewData["SearchText"] as String, new { style = "width:100px;height:33px" })
                                            <input type="submit" value="Search" name="command" class="btn btn-default" />
                                            <input type="submit" value="Show All" name="command" class="btn btn-default" />
                                        </td>
                                        <td>&nbsp;</td>
                                        <td align="right">&nbsp;</td>
                                    </tr>
                                    <tr>
                                        <td align="left">
                                            @Html.DropDownList("Export", (IEnumerable<SelectListItem>)ViewData["Exports"], new { style = "width:65px;height:33px" })
                                            <input type="submit" value="Export" name="command" class="btn btn-default" />
                                        </td>
                                        <td>&nbsp;</td>
                                        <td align="center">
                                            <input type="submit" value="Add New Record" name="command" class="btn btn-default" />
                                        </td>
                                        <td>&nbsp;</td>
                                        <td align="right">
                                            @Html.DropDownList("PageSize", (IEnumerable<SelectListItem>)ViewData["PageSizes"], new { style = "width:50px;height:33px" })
                                            <input type="submit" value="Page Size" name="command" class="btn btn-default" />
                                        </td>
                                    </tr>
                                </table>
                            </div>
                        }
                        <hr />
                        <div class="table-responsive">
                            <table class="table">
                                <tr class="bg-danger">
                                    <th style="display:none;">
                                        @Html.ActionLink("Role I D", "Index", new { sortOrder = ViewData["RoleIDSortParm"], SearchText = ViewData["SearchText"] })
                                    </th>
                                    <th style="display:none;">
                                        @Html.ActionLink("Add User I D", "Index", new { sortOrder = ViewData["AddUserIDSortParm"], SearchText = ViewData["SearchText"] })
                                    </th>
                                    <th style="display:none;">
                                        @Html.ActionLink("Add Date", "Index", new { sortOrder = ViewData["AddDateSortParm"], SearchText = ViewData["SearchText"] })
                                    </th>
                                    <th style="display:none;">
                                        @Html.ActionLink("Archive User I D", "Index", new { sortOrder = ViewData["ArchiveUserIDSortParm"], SearchText = ViewData["SearchText"] })
                                    </th>
                                    <th style="display:none;">
                                        @Html.ActionLink("Archive Date", "Index", new { sortOrder = ViewData["ArchiveDateSortParm"], SearchText = ViewData["SearchText"] })
                                    </th>
                                    <th>
                                        @Html.ActionLink("User Type", "Index", new { sortOrder = ViewData["UserTypeIDSortParm"], SearchText = ViewData["SearchText"] })
                                    </th>
                                    <th></th>
                                </tr>

                                @foreach (var item in Model)
                                {
                                    <tr>
                                        <td style="display:none;">

                                            @Html.DisplayFor(modelItem => item.RoleID)
                                        </td>
                                        <td style="display:none;">
                                            @Html.DisplayFor(modelItem => item.AddUserID)
                                        </td>
                                        <td style="display:none;">
                                            @Html.DisplayFor(modelItem => item.AddDate)
                                        </td>
                                        <td style="display:none;">
                                            @Html.DisplayFor(modelItem => item.ArchiveUserID)
                                        </td>
                                        <td style="display:none;">
                                            @Html.DisplayFor(modelItem => item.ArchiveDate)
                                        </td>
                                        <td>
                                            @Html.DisplayFor(modelItem => item.UserType.UserTypeName)
                                        </td>
                                        <td>
                                            <a href="@Url.Action("Edit", "RoleManagement", new { RoleID = item.RoleID })" class="label bg-green">
                                                <i class="fa fa-edit">  Edit</i>
                                            </a>
                                            |
                                            <a href="@Url.Action("Details", "RoleManagement", new { RoleID = item.RoleID })" class="label bg-yellow">
                                                <i class="fa fa-info">  Details</i>
                                            </a>
                                            |
                                            <a href="@Url.Action("Delete", "RoleManagement", new { RoleID = item.RoleID })" class="label bg-red">
                                                <i class="fa fa-eraser">  Delete</i>
                                            </a>
                                        </td>
                                    </tr>
                                }
                            </table>
                        </div>
                        <div class="table-responsive">
                            <table class="table">
                                <tr>
                                    <td align="center">
                                        @Html.PagedListPager(Model, page => Url.Action("Index", new { page, sortOrder = ViewData["CurrentSort"], SearchText = ViewData["SearchText"] }))
                                    </td>
                                </tr>
                            </table>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </section>
</div>
